@API = http://localhost:8000
@ops-api-key = <copy from API .env>
@jwt = Bearer <copy from browser>
@user = <first.last>@digital.cabinet-office.gov.uk

### Test login:
GET {{API}}/login
Authorization: {{jwt}}


### List all users (ops only):
GET {{API}}/users
x-api-key: {{ops-api-key}}

### Delete a user (ops only):
DELETE {{API}}/users/{{user}}
x-api-key: {{ops-api-key}}

### Set user organisation (ops only):
PUT {{API}}/users/{{user}}/org
x-api-key: {{ops-api-key}}

{
    "org": "department-for-work-pensions"
}

### Let a user complete their profile (JWT):
PUT {{API}}/users/complete-profile
Authorization: {{jwt}}

{
    "org": "ofsted",
    "role": "lawyer"
}

### Get user (JWT):
GET {{API}}/users/me
Authorization: {{jwt}}

### GET Share requests created by user (JWT):
GET {{API}}/manage-shares/created-requests
Authorization: {{jwt}}

### GET Share requests received by org (JWT):
GET {{API}}/manage-shares/received-requests
Authorization: {{jwt}}

### GET Share request by ID (JWT)
GET {{API}}/manage-shares/received-requests/{{request_id}}
Authorization: {{jwt}}

### POST Share request notes
PUT {{API}}/manage-shares/received-requests/{{request_id}}/review
Authorization: {{jwt}}

{
    "notes": "Is this a valid legal power?"
}

### POST Share request notes
PUT {{API}}/manage-shares/received-requests/{{request_id}}/decision
Authorization: {{jwt}}

{
    "status": "RETURNED",
    "decisionNotes": "This is not Ok"
}

### Add user permissions
PUT {{API}}/users/{{user}}/permissions
x-api-key: {{ops-api-key}}

{
    "add": ["SHARE_REVIEWER"]
}

### Remove user permissions
PUT {{API}}/users/b64c6e5a9861aa120c06caac1f2dfc3d/permissions
x-api-key: {{ops-api-key}}

{
    "remove": ["SHARE_REVIEWER"]
}

### Check a user's permissions
GET {{API}}/users/permission/organisation/department-for-work-pensions/VIEW_SHARE_REQUESTS
Authorization: {{jwt}}